MEMO:
深さ　d
if d >= 1

  d=0 を
  d-1の図形
  　＊　＝　生成パタン　pat[][]
  　’’　＝　パタン分空白

print_frac(d)
  pat[i][j]

exist_at(i,j,d)  今の深さの今の座標
if d == 0
  return 1
else if (exist_at(i/p_rn, j/p_cn, d-1)==0)　現在地を前の深さの全体パタン中に置き換え
  return 0
else
  return 1

  sizeof pat/ sizeof pat[0]
  sizeof pat[0] / sizeof pat[0][0]
--------------------------------------------
ポイント
漸化式（ぜんか）
  各項がそれ以前の項の関数として定まるという意味で数列を再帰的に定める等式

・再帰関数のイメージ

！！
・配列の行・列数 p_rn, p_cn
・フクタル図形の反復回数（≒フクタルのまとまりを１とした場合の行列の数）　cn=rn
